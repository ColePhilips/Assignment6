name: Deploy to AWS EC2

on:
  push:
    branches:
      - main  # Change this to your default branch if it's not 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Specify your Python version

      - name: Remove existing virtual environment (if any)
        run: |
          cd monsterhunter-app
          if [ -d venv ]; then
            rm -rf venv  # Remove the existing virtual environment
          fi

      - name: Create and activate virtual environment
        run: |
          cd monsterhunter-app
          python -m venv venv  # Create a new virtual environment
          source venv/bin/activate
          # Check if pip exists
          if [ -f venv/bin/pip ]; then
            echo "pip found"
          else
            echo "pip not found"
            exit 1
          fi
          pip install --upgrade pip  # Upgrade pip to the latest version
          pip install -r requirements.txt  # Install Python dependencies

      - name: Change to application directory
        run: |
          cd monsterhunter-app
          npm install  # Install Node.js dependencies

      - name: Run tests
        run: |
          cd monsterhunter-app
          source venv/bin/activate  # Activate the virtual environment
          python src/test_api.py  # Run your test script

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            cd ~/Assignment6/monsterhunter-app
            git pull origin main  # Pull the latest changes
            source venv/bin/activate  # Activate the virtual environment
            npm install  # Install Node.js dependencies
            # If you need to install Python dependencies, run:
            pip install -r requirements.txt  # Ensure pytest is included here
            sudo systemctl restart myapp.service  # Restart the systemd service
          EOF
